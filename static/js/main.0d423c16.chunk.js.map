{"version":3,"sources":["components/TimeClock/TimeClock.js","components/Bellman/Bellman.js","components/StaffTable/Employee/Employee.js","components/StaffTable/StaffTable.js","components/Fronts/AssignModal/AssignModal.js","components/Fronts/FrontModal/FrontModal.js","components/Fronts/EditModal/EditModal.js","components/Fronts/Fronts.js","components/Fronts/Front/Front.js","components/CompletedFronts/CompletedFronts.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["timeClock","props","className","class","htmlFor","type","id","placeholder","onClick","click","Bellman","lastName","firstName","position","this","fullName","status","active","fronts","employee","staffTable","isDisabled","btnType","isHidden","bellmen","map","bellman","index","Employee","key","staffButtonClick","disabled","hidden","assignModal","noBellmen","availBellmen","i","length","data-dismiss","bellmanClick","assignBtn","data-toggle","data-target","confirmCancel","frontModal","ticketInput","frontInputs","onChange","e","frontInputsHandler","target","value","ticketError","name","typeSelect","typeError","room","roomError","nameError","rows","comment","defaultChecked","editModal","roomValidator","front","nameValidator","ticketValidator","ticket","editInputs","checked","editType","eliteStatus","assignedClass","assignedFronts","forEach","tableClass","time","Math","floor","currentTime","getTime","frontClick","assignFront","FrontModal","AssignModal","EditModal","activeFront","Front","Date","timeCompleted","timeElapsed","completedFronts","sort","toLocaleString","nav","App","state","frontsClass","timeClockClass","completedClass","activeIndex","activeStatus","prevFrontState","elite","completedSort","showTable","arr","navClickHandler","el","val","toggle","setState","arg","clockInHandler","last","document","getElementById","first","classList","remove","add","push","employeeClickHandler","statusHandler","action","splice","field","inputState","editTypeHandler","newType","editInputsHandler","validate","inputs","addFrontHandler","reset","typeSelectHandler","frontClickHandler","assignHandler","frontIndex","indexOf","bellmanIndex","alert","completeFrontHandler","sortBy","property","order","a","b","sortCompletedHandler","setInterval","setCurrentTime","Nav","Fronts","validators","TimeClock","StaffTable","CompletedFronts","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d423c16.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst timeClock = (props) => {\r\n    return (\r\n        <section className={props.class}>\r\n            <div className=\"container\">\r\n                <h1 className=\"display-3 text-center\">Staff</h1>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\">Last Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" />\r\n                            <label id=\"lastNameValidator\" htmlFor=\"lastName\" className=\"text-danger d-none\">*Required</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\">First Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"First Name\" />\r\n                            <label id=\"firstNameValidator\" htmlFor=\"firstName\" className=\"text-danger d-none\">*Required</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"position\">Position:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"position\" placeholder=\"Position\" />\r\n                            <label id=\"positionValidator\" htmlFor=\"position\" className=\"text-danger d-none\">*Required</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={props.click}>Clock In</button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default timeClock;","class Bellman {\r\n    constructor(lastName, firstName, position) {\r\n        this.lastName = lastName;\r\n        this.firstName = firstName;\r\n        this.fullName = firstName + ' ' + lastName;\r\n        this.position = position;\r\n        this.status = \"Available\";\r\n        this.active = \"false\";\r\n        this.fronts = 0;\r\n    }\r\n}\r\n\r\nexport default Bellman;","import React from 'react';\r\n\r\nconst employee = (props) => {\r\n    return (\r\n        <tr className=\"text-capitalize\" onClick={props.click} active={props.active}>\r\n            <td>{props.lastName}</td>\r\n            <td>{props.firstName}</td>\r\n            <td>{props.position}</td>\r\n            <td>{props.status}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default employee;","import React from 'react';\r\n\r\nimport Employee from './Employee/Employee';\r\n\r\nconst staffTable = (props) => {\r\n\r\n    const isDisabled = (btnType, status) => {\r\n        if (btnType === 'startBreak') {\r\n            if (status === 'Available') return false;\r\n            else return true;\r\n        }\r\n        if (btnType === 'endBreak') {\r\n            if (status === 'On Break') return false;\r\n            else return true;\r\n        }\r\n        if (btnType === 'exitQueue') {\r\n            if (status === 'Available') return false;\r\n            else return true;\r\n        }\r\n        if (btnType === 'clockOut') {\r\n            if (status === 'Available') return false;\r\n            else return true;\r\n        }\r\n    }\r\n\r\n    const isHidden = (btnType, status) => {\r\n        if (btnType === 'exitQueue') {\r\n            if (status === 'Away') return true;\r\n            else return false;\r\n        }\r\n        if (btnType === 'enterQueue') {\r\n            if (status === 'Away') return false;\r\n            else return true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={props.className}>\r\n            <div className=\"container\">\r\n                <table className=\"table\">\r\n                    <thead className=\"bg-light\">\r\n                        <tr>\r\n                            <th>Last Name</th>\r\n                            <th>First Name</th>\r\n                            <th>Position</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white hover\">\r\n                        {props.bellmen.map((bellman, index) => {\r\n                            return (\r\n                                <Employee\r\n                                    lastName={bellman.lastName}\r\n                                    firstName={bellman.firstName}\r\n                                    position={bellman.position}\r\n                                    status={bellman.status}\r\n                                    key={index}\r\n                                    click={() => props.click(index)}\r\n                                    active={bellman.active}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"text-center\">\r\n                    <button\r\n                        className=\"btn btn-secondary m-3\"\r\n                        onClick={() => props.staffButtonClick('startBreak')}\r\n                        disabled={isDisabled('startBreak', props.status)}>Start Break\r\n                        </button>\r\n                    <button\r\n                        className=\"btn btn-secondary m-3\"\r\n                        onClick={() => props.staffButtonClick('endBreak')}\r\n                        disabled={isDisabled('endBreak', props.status)}>End Break</button>\r\n                    <button\r\n                        className=\"btn btn-secondary m-3\"\r\n                        onClick={() => props.staffButtonClick('exitQueue')}\r\n                        disabled={isDisabled('exitQueue', props.status)}\r\n                        hidden={isHidden('exitQueue', props.status)}>Exit Queue</button>\r\n                    <button\r\n                        className=\"btn btn-secondary m-3\"\r\n                        onClick={() => props.staffButtonClick('enterQueue')}\r\n                        hidden={isHidden('enterQueue', props.status)}>Enter Queue</button>\r\n                    <button\r\n                        className=\"btn btn-secondary m-3\"\r\n                        onClick={() => props.staffButtonClick('clockOut')}\r\n                        disabled={isDisabled('clockOut', props.status)}>Clock Out</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default staffTable;","import React from 'react';\r\n\r\nconst assignModal = (props) => {\r\n    let noBellmen = null;\r\n    let availBellmen = false;\r\n    for (let i = 0; i < props.bellmen.length; i++) {\r\n        if (props.bellmen[i].status === \"Available\" || props.bellmen[i].status === \"Busy\") {\r\n            availBellmen = true;\r\n        }\r\n    }\r\n    if (availBellmen === false) {\r\n        noBellmen =\r\n            <p className=\"text-center\">*No available bellmen</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal\" id=\"assignModal\">\r\n                <div className=\"modal-dialog modal-lg\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 className=\"modal-title\">Assign Front</h2>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <table className=\"table text-capitalize\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Last Name</th>\r\n                                        <th>First Name</th>\r\n                                        <th>Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"hover\">\r\n                                    {\r\n                                        props.bellmen.map((bellman, index) => {\r\n                                            if (bellman.status === \"Available\" || bellman.status === \"Busy\") {\r\n                                                return (\r\n                                                    <tr key={index} onClick={() => props.bellmanClick(index)} active={bellman.active}>\r\n                                                        <td>{bellman.lastName}</td>\r\n                                                        <td>{bellman.firstName}</td>\r\n                                                        <td>{bellman.status}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            else return null;\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            {noBellmen}\r\n                            <div className=\"text-center\">\r\n                                <button className=\"btn btn-success m-3\" onClick={() => props.assignBtn('assign')} data-dismiss=\"modal\">Assign</button>\r\n                                <button className=\"btn btn-danger m-3\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#confirmCancelModal\">Cancel Front</button>\r\n                                <button className=\"btn btn-secondary\" id=\"editBtn\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal\" id=\"confirmCancelModal\">\r\n                <div className=\"modal-dialog modal-lg\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-body text-center\">\r\n                            <h1 className=\"m-5\">Are you sure you want to cancel this front?</h1>\r\n                            <button className=\"btn btn-lg btn-success m-3\" onClick={props.confirmCancel} data-dismiss=\"modal\">Yes</button>\r\n                            <button className=\"btn btn-lg btn-danger m-3\" data-dismiss=\"modal\">No</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default assignModal;","import React from 'react';\r\n\r\nconst frontModal = (props) => {\r\n\r\n    let ticketInput = null;\r\n    if (props.frontInputs.type === 'Check In') {\r\n        ticketInput =\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ticketNumber\">Ticket:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"ticketNumber\"\r\n                        placeholder=\"Ticket #\"\r\n                        onChange={(e) => props.frontInputsHandler('ticket', e.target.value)}\r\n                    />\r\n                    <p className=\"text-danger\">{props.frontInputs.ticketError}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    } else {\r\n        ticketInput = null;\r\n    }\r\n    \r\n\r\n    return (\r\n        <form id=\"frontForm\">\r\n            <div className=\"modal\" id=\"frontModal\">\r\n                <div className=\"modal-dialog modal-lg\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 className=\"modal-title\">Add Front</h2>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" id=\"checkInRadio\" name=\"frontType\" value=\"Check In\" onChange={() => props.typeSelect('Check In')} />Check In\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" id=\"checkOutRadio\" name=\"frontType\" value=\"Check Out\" onChange={() => props.typeSelect('Check Out')} />Check Out\r\n                                </label>\r\n                            </div>\r\n                            <p className=\"text-danger\">{props.frontInputs.typeError}</p>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"frontRoom\">Room:</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            id=\"frontRoom\"\r\n                                            placeholder=\"Room #\"\r\n                                            onChange={(e) => props.frontInputsHandler('room', e.target.value)}\r\n                                            value={props.frontInputs.room}\r\n                                        />\r\n                                        <p className=\"text-danger\">{props.frontInputs.roomError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"frontName\">Last Name:</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"frontName\"\r\n                                            placeholder=\"Last Name\"\r\n                                            onChange={(e) => props.frontInputsHandler('name', e.target.value)}\r\n                                            value={props.frontInputs.name}\r\n                                        />\r\n                                        <p className=\"text-danger\">{props.frontInputs.nameError}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {ticketInput}\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"frontComment\">Comment:</label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            id=\"frontComment\"\r\n                                            rows=\"2\"\r\n                                            placeholder=\"Comment...\"\r\n                                            onChange={(e) => props.frontInputsHandler('comment', e.target.value)}\r\n                                            value={props.frontInputs.comment}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" id=\"eliteRadio\" name=\"frontElite\" value=\"Elite\" onChange={(e) => props.frontInputsHandler('elite', e.target.value)} />Elite\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" id=\"platinumRadio\" name=\"frontElite\" value=\"Platinum\" onChange={(e) => props.frontInputsHandler('elite', e.target.value)} />Platinum\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" id=\"titaniumRadio\" name=\"frontElite\" value=\"Titanium\" onChange={(e) => props.frontInputsHandler('elite', e.target.value)} />Titanium\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" id=\"ambassadorRadio\" name=\"frontElite\" value=\"Ambassador\" onChange={(e) => props.frontInputsHandler('elite', e.target.value)} />Ambassador\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"radio\" className=\"form-check-input\" name=\"frontElite\" value=\"\" onChange={(e) => props.frontInputsHandler('elite', e.target.value)} defaultChecked />None\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-success form-control\" onClick={() => props.click()} data-dismiss=\"modal\">Dispatch</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        )\r\n}\r\n\r\nexport default frontModal;","import React from 'react';\r\n\r\nconst editModal = (props) => {\r\n\tlet roomValidator = null;\r\n\tif (props.front.room === '') {\r\n\t\troomValidator =\r\n\t\t<p className=\"text-danger\">*Required</p>\r\n\t}\r\n\r\n\tlet nameValidator = null;\r\n\tif (props.front.name === '') {\r\n\t\tnameValidator =\r\n\t\t\t<p className=\"text-danger\">*Required</p>\r\n\t}\r\n\r\n\tlet ticketValidator = null;\r\n\tif (props.front.ticket === '' && props.front.type === 'Check In') {\r\n\t\tticketValidator =\r\n\t\t\t<p className=\"text-danger\">*Required</p>\r\n\t}\r\n\r\n\tlet ticketInput = null;\r\n\tif (props.front.type === 'Check In') {\r\n\t\tticketInput =\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"ticketNumber\">Ticket:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"ticketNumber\"\r\n\t\t\t\t\t\tvalue={props.front.ticket}\r\n\t\t\t\t\t\tonChange={(e) => props.editInputs('ticket', e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{ticketValidator}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t} else {\r\n\t\tticketInput = null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"modal\" id=\"editModal\">\r\n\t\t\t<div className=\"modal-dialog modal-lg\">\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t<h1 className=\"modal-title\">Edit Front</h1>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" id=\"checkInRadio\" name=\"frontType\" value=\"Check In\"\r\n\t\t\t\t\t\t\t\t\tchecked={props.front.type === 'Check In'}\r\n\t\t\t\t\t\t\t\t\tonChange={() => props.editType('Check In')}/>Check In\r\n                                </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" id=\"checkOutRadio\" name=\"frontType\" value=\"Check Out\"\r\n\t\t\t\t\t\t\t\t\tchecked={props.front.type === 'Check Out'}\r\n\t\t\t\t\t\t\t\t\tonChange={() => props.editType('Check Out')}\r\n\t\t\t\t\t\t\t\t/>Check Out</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"#editRoom\">Room:</label>\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control\" type=\"number\" id=\"editRoom\" value={props.front.room || ''}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('room', e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{roomValidator}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"#editName\">Name:</label>\r\n\t\t\t\t\t\t\t\t\t<input className=\"form-control\" type=\"text\" id=\"editName\" value={props.front.name || ''}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('name', e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{nameValidator}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{ticketInput}\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"#editComment\">Comment:</label>\r\n\t\t\t\t\t\t\t<textarea className=\"form-control\" id=\"editComment\" value={props.front.comment}\r\n\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('comment', e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" id=\"eliteRadio\" name=\"frontElite\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"Elite\" checked={props.front.eliteStatus === 'Elite'}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('elite', e.target.value)} />Elite\r\n                                </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" id=\"platinumRadio\" name=\"frontElite\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"Platinum\" checked={props.front.eliteStatus === 'Platinum'}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('elite', e.target.value)} />Platinum\r\n                                </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" id=\"titaniumRadio\" name=\"frontElite\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"Titanium\" checked={props.front.eliteStatus === 'Titanium'}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('elite', e.target.value)} />Titanium\r\n                                </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" id=\"ambassadorRadio\" name=\"frontElite\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"Ambassador\" checked={props.front.eliteStatus === 'Ambassador'}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('elite', e.target.value)} />Ambassador\r\n                                </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-check-inline\">\r\n\t\t\t\t\t\t\t<label className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" className=\"form-check-input\" name=\"frontElite\" value=\"\"\r\n\t\t\t\t\t\t\t\t\tchecked={props.front.eliteStatus === ''}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => props.editInputs('elite', e.target.value)} />None\r\n                                </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"modal-footer\">\r\n\t\t\t\t\t\t<button className=\"btn btn-success form-control\" data-dismiss=\"modal\">Done</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default editModal;","import React from 'react';\r\n\r\nimport AssignModal from './AssignModal/AssignModal';\r\nimport FrontModal from './FrontModal/FrontModal';\r\nimport EditModal from './EditModal/EditModal';\r\n\r\nconst fronts = (props) => {\r\n    let assignedClass;\r\n    let assignedFronts = 0;\r\n    props.fronts.forEach(front => {\r\n        if (front.status === 'Assigned') {\r\n            assignedFronts++;\r\n        }\r\n    })\r\n    if (assignedFronts === 0) {\r\n        assignedClass = 'd-none';\r\n    } else {\r\n        assignedClass = 'd-block';\r\n    }\r\n\r\n    return (\r\n        <section className={props.class}>\r\n            <div className=\"container\">\r\n                <h1 className=\"display-3 text-center\">Fronts</h1>\r\n                <hr />\r\n                <button className=\"btn btn-primary\" id=\"addFrontBtn\" data-toggle=\"modal\" data-target=\"#frontModal\">Add Front</button>\r\n                <div className={props.tableClass(props.fronts)}>\r\n                    <h1 className=\"mt-3\">Pending</h1>\r\n                    <table className=\"table table-hover text-capitalize\">\r\n                        <thead className=\"bg-light\">\r\n                            <tr>\r\n                                <th>Time</th>\r\n                                <th>Room</th>\r\n                                <th>Last Name</th>\r\n                                <th>Type</th>\r\n                                <th>Ticket</th>\r\n                                <th>Comment</th>\r\n                                <th>Elite</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"bg-white hover\">\r\n                            {props.fronts.map((front, index) => {\r\n                                let time = Math.floor((props.currentTime.getTime() - front.time.getTime()) / 1000 / 60);\r\n                                if (time < 0) {\r\n                                    time = 0;\r\n                                }\r\n                                if (front.status === 'Pending') {\r\n                                    return (\r\n                                        <tr key={front.time} data-toggle=\"modal\" data-target=\"#assignModal\" onClick={() => props.frontClick(index)}>\r\n                                            <td id={front.time}>{time}</td>\r\n                                            <td>{front.room}</td>\r\n                                            <td>{front.name}</td>\r\n                                            <td>{front.type}</td>\r\n                                            <td>{front.ticket}</td>\r\n                                            <td>{front.comment}</td>\r\n                                            <td>{front.eliteStatus}</td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className={assignedClass}>\r\n                    <h1>Assigned</h1>\r\n                    <table className=\"table table-hover text-capitalize hover\">\r\n                        <thead className=\"bg-light\">\r\n                            <tr>\r\n                                <th>Time</th>\r\n                                <th>Bellman</th>\r\n                                <th>Room</th>\r\n                                <th>Last Name</th>\r\n                                <th>Type</th>\r\n                                <th>Ticket</th>\r\n                                <th>Comment</th>\r\n                                <th>Elite</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"bg-white\">\r\n                            {props.fronts.map((front, index) => {\r\n                                if (front.status === 'Assigned') {\r\n                                    let time = Math.floor((props.currentTime.getTime() - front.time.getTime()) / 1000 / 60);\r\n                                    if (time < 0) {\r\n                                        time = 0;\r\n                                    }\r\n                                    return (\r\n                                        <tr key={front.time} data-toggle=\"modal\" data-target=\"#completeModal\" onClick={() => props.frontClick(index)}>\r\n                                            <td id={front.time}>{time}</td>\r\n                                            <td>{front.bellman.fullName}</td>\r\n                                            <td>{front.room}</td>\r\n                                            <td>{front.name}</td>\r\n                                            <td>{front.type}</td>\r\n                                            <td>{front.ticket}</td>\r\n                                            <td>{front.comment}</td>\r\n                                            <td>{front.eliteStatus}</td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"modal\" id=\"completeModal\">\r\n                    <div className=\"modal-dialog p-5\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h1 className=\"modal-title\">Complete?</h1>\r\n                            </div>\r\n                            <div className=\"modal-body text-center\">\r\n                                <button className=\"btn btn-lg btn-success m-3\" onClick={props.confirmCancel} data-dismiss=\"modal\">Yes</button>\r\n                                <button className=\"btn btn-lg btn-danger m-3\" data-dismiss=\"modal\">No</button>\r\n                                <button className=\"btn btn-lg btn-info m-3\" onClick={() => props.assignFront('pending')} data-dismiss=\"modal\">Pending</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <FrontModal\r\n                    click={props.click}\r\n                    typeSelect={props.typeSelect}\r\n                    frontInputs={props.frontInputs}\r\n                    frontInputsHandler={props.frontInputsHandler}\r\n                />\r\n                <AssignModal\r\n                    bellmen={props.bellmen}\r\n                    bellmanClick={props.bellmanClick}\r\n                    assignBtn={props.assignFront}\r\n                    confirmCancel={props.confirmCancel}\r\n                />\r\n                <EditModal\r\n                    front={props.activeFront}\r\n                    editInputs={props.editInputs}\r\n                    editType={props.editType}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default fronts;","class Front {\r\n    constructor(type, room, name, ticket, comment, eliteStatus) {\r\n        this.type = type;\r\n        this.room = room;\r\n        this.name = name;\r\n        this.ticket = ticket;\r\n        this.comment = comment;\r\n        this.eliteStatus = eliteStatus;\r\n        this.time = new Date();\r\n        this.bellman = null;\r\n        this.status = 'Pending';\r\n        this.timeCompleted = null;\r\n        this.timeElapsed = null;\r\n    }\r\n}\r\n\r\nexport default Front;","import React from 'react';\r\n\r\nconst completedFronts = (props) => {\r\n    return (\r\n        <section className={props.class}>\r\n            <h1 className=\"display-3 text-center\">Completed Fronts</h1>\r\n            <hr />\r\n            <table className=\"table table-striped text-capitalize\">\r\n                <thead>\r\n                    <tr className=\"hover\">\r\n                        <th onClick={() => props.sort('time')}>Requested</th>\r\n                        <th onClick={() => props.sort('timeCompleted')}>Completed</th>\r\n                        <th onClick={() => props.sort('timeElapsed')}>Time</th>\r\n                        <th onClick={() => props.sort('bellman')}>Bellman</th>\r\n                        <th onClick={() => props.sort('type')}>Type</th>\r\n                        <th onClick={() => props.sort('room')}>Room</th>\r\n                        <th onClick={() => props.sort('name')}>Name</th>\r\n                        <th onClick={() => props.sort('ticket')}>Ticket</th>\r\n                        <th onClick={() => props.sort('comment')}>Comment</th>\r\n                        <th onClick={() => props.sort('eliteStatus')}>Elite</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.fronts.map(front => {\r\n                        return (\r\n                            <tr key={front.time}>\r\n                                <td>{front.time.toLocaleString()}</td>\r\n                                <td>{front.timeCompleted.toLocaleString()}</td>\r\n                                <td>{front.timeElapsed}</td>\r\n                                <td>{front.bellman}</td>\r\n                                <td>{front.type}</td>\r\n                                <td>{front.room}</td>\r\n                                <td>{front.name}</td>\r\n                                <td>{front.ticket}</td>\r\n                                <td>{front.comment}</td>\r\n                                <td>{front.eliteStatus}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default completedFronts;","import React from 'react';\r\n\r\nconst nav = (props) => {\r\n\treturn (\r\n\t\t<nav>\r\n            <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\r\n                <span className=\"navbar-brand\"><h3>Bell App</h3></span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <button className=\"nav-link btn\" onClick={() => props.click('fronts')}>Fronts</button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button className=\"nav-link btn\" onClick={() => props.click('timeClock')}>Time Clock</button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button className=\"nav-link btn\" onClick={() => props.click('completed')}>Completed</button>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <button className=\"nav-link btn btn-primary\" data-toggle=\"modal\" data-target=\"#frontModal\">Add Front</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default nav;","import React, { Component } from 'react';\nimport './App.css';\n\nimport TimeClock from './components/TimeClock/TimeClock';\nimport Bellman from './components/Bellman/Bellman';\nimport StaffTable from './components/StaffTable/StaffTable';\nimport Fronts from './components/Fronts/Fronts';\nimport Front from './components/Fronts/Front/Front';\nimport CompletedFronts from './components/CompletedFronts/CompletedFronts';\nimport Nav from './components/Nav/Nav';\n\nclass App extends Component {\n    state = {\r\n        currentTime: new Date(),\n\n        //Hide Elements\n        frontsClass: '',\n        timeClockClass: '',\n        completedClass: 'd-none',\n\n        bellmen: [],\r\n        activeIndex: '',\r\n        activeStatus: '',\r\n\r\n        fronts: [],\r\n        activeFront: '',\r\n        prevFrontState: '',\r\n        frontInputs: {\r\n            type: '',\r\n            room: '',\r\n            name: '',\r\n            ticket: '',\r\n            comment: '',\r\n            elite: '',\r\n\r\n            //Validators\r\n            typeError: '',\r\n            roomError: '',\r\n            nameError: '',\r\n            ticketError: ''\r\n        },\r\n\r\n        completedFronts: [],\r\n        completedSort: ''\r\n\r\n    }\n\n    setCurrentTime() {\r\n        this.setState({ currentTime: new Date() });\r\n    }\n\n    componentDidMount() {\n        setInterval(()=>this.setCurrentTime(), 3000);\r\n    }\n\n    showTable = (arr) => {\n        if (arr.length === 0) {\r\n            return \"d-none\";\r\n        } else {\r\n            return \"d-block\";\r\n        }\r\n    }\n\n\n    //Nav Buttons\n    navClickHandler = (el) => {\n        let val;\n        if (el === 'fronts') {\r\n            val = this.toggle(this.state.frontsClass);\r\n            this.setState({ frontsClass: val });\r\n        }\r\n        if (el === 'timeClock') {\r\n            val = this.toggle(this.state.timeClockClass);\r\n            this.setState({ timeClockClass: val });\r\n        }\r\n        if (el === 'completed') {\r\n            val = this.toggle(this.state.completedClass);\r\n            this.setState({ completedClass: val });\r\n        }\r\n    }\n\n    toggle = (arg) => {\n        if (arg === '') return 'd-none';\r\n        else return '';\r\n    }\n\n    //Staff\n    clockInHandler = () => {\n        let last = document.getElementById('lastName').value;\n        let first = document.getElementById('firstName').value;\n        let position = document.getElementById('position').value;\n        if (last === \"\" || first === \"\" || position === \"\") {\n            if (last === \"\") {\n                document.getElementById('lastNameValidator').classList.remove('d-none');\r\n            } else document.getElementById('lastNameValidator').classList.add('d-none');\n            if (first === \"\") {\n                document.getElementById('firstNameValidator').classList.remove('d-none');\r\n            } else document.getElementById('firstNameValidator').classList.add('d-none');\n            if (position === \"\") {\n                document.getElementById('positionValidator').classList.remove('d-none');\r\n            } else document.getElementById('positionValidator').classList.add('d-none');\r\n        } else {\n            let bellmen = this.state.bellmen;\n            bellmen.push(new Bellman(last, first, position));\n            this.setState({ bellmen: bellmen });\n            document.getElementById('lastNameValidator').classList.add('d-none');\n            document.getElementById('firstNameValidator').classList.add('d-none');\n            document.getElementById('positionValidator').classList.add('d-none');\r\n            document.getElementById('lastName').value = \"\";\r\n            document.getElementById('firstName').value = \"\";\r\n            document.getElementById('position').value = \"\";\r\n            \r\n\r\n        }\r\n    }\n\n    employeeClickHandler = (index) => {\n        this.state.bellmen.forEach((bellman) => {\n            bellman.active = \"false\";\r\n        })\n        let bellmen = [...this.state.bellmen];\r\n        bellmen[index].active = \"true\";\r\n        let activeIndex = index;\r\n        let activeStatus = this.state.bellmen[index].status;\r\n        this.setState({ bellmen: bellmen, activeIndex: activeIndex, activeStatus: activeStatus });\r\n    }\n\n    statusHandler = (action) => {\n\n        let status = this.state.activeStatus;\n        let index = this.state.activeIndex;\n\n        let bellmen = [...this.state.bellmen];\n\n        if (action === \"startBreak\") {\r\n            status = \"On Break\";\r\n        }\r\n        else if (action === \"endBreak\") {\r\n            status = \"Available\";\r\n        }\r\n        else if (action === \"exitQueue\") {\r\n            status = \"Away\";\r\n        }\r\n        else if (action === \"enterQueue\") {\r\n            status = \"Available\";\r\n        }\r\n        else if (action === \"busy\") {\r\n            status = \"Busy\";\r\n        }\r\n        else if (action === \"clockOut\") {\r\n            bellmen.splice(index, 1);\r\n            index = \"\";\r\n            let activeStatus = \"\";\r\n            this.setState({ bellmen: bellmen, activeStatus: activeStatus, activeIndex: index });\r\n            return;\r\n        }\r\n\r\n        bellmen[index].status = status;\r\n        let activeStatus = status;\r\n\r\n        this.setState({ bellmen: bellmen, activeStatus: activeStatus, activeIndex: index });\r\n\r\n    }\n\n\n    //Fronts\n    frontInputsHandler = (field, value) => {\n        let inputState = this.state.frontInputs;\n        if (field === 'room') {\r\n            inputState.room = value;\r\n        }\r\n        if (field === 'name') {\r\n            inputState.name = value;\r\n        }\r\n        if (field === 'ticket') {\r\n            inputState.ticket = value;\r\n        }\r\n        if (field === 'comment') {\r\n            inputState.comment = value;\r\n        }\r\n        if (field === 'elite') {\r\n            inputState.elite = value;\r\n        }\r\n        this.setState({ frontInputs: inputState });\r\n    }\n\n    editTypeHandler = (type) => {\n        let activeFront = this.state.activeFront;\n        const newType = type;\r\n        activeFront.type = newType;\r\n        if (activeFront.type === 'Check Out') {\r\n            activeFront.ticket = '';\r\n        }\r\n        this.setState({ activeFront: activeFront });\r\n    }\n\n    editInputsHandler = (field, value) => {\n        let front = this.state.activeFront;\n        if (field === 'room') {\r\n            front.room = value;\r\n        }\r\n        if (field === 'name') {\r\n            front.name = value;\r\n        }\r\n        if (field === 'ticket') {\r\n            front.ticket = value;\r\n        }\r\n        if (field === 'comment') {\r\n            front.comment = value;\r\n        }\r\n        if (field === 'elite') {\r\n            front.eliteStatus = value;\r\n        }\r\n        this.setState({ activeFront: front });\r\n    }\n\n    validate = (inputs) => {\n        if (inputs.type === '' || inputs.room === '' || inputs.name === '') {\r\n            return true;\r\n        }\r\n        if (inputs.type === 'Check In' && inputs.ticket === '') {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\n\n    addFrontHandler = () => {\r\n        const inputs = this.state.frontInputs;\r\n        const missingItem = this.validate(inputs);\r\n        if (missingItem) {\r\n            if (inputs.type === '') inputs.typeError = '*Required';\r\n            if (inputs.room === '') inputs.roomError = '*Required';\r\n            if (inputs.name === '') inputs.nameError = '*Required';\r\n            if (inputs.type === 'Check In' && inputs.ticket === '') inputs.ticketError = '*Required';\r\n            this.setState({ frontInputs: inputs });\r\n            document.getElementById('addFrontBtn').click();\r\n        } else {\r\n            const front = new Front(inputs.type, inputs.room, inputs.name, inputs.ticket, inputs.comment, inputs.elite);\r\n            const fronts = [...this.state.fronts, front];\r\n            this.setState({ fronts: fronts });\r\n            inputs.room = '';\r\n            inputs.name = '';\r\n            inputs.ticket = '';\r\n            inputs.comment = '';\r\n            inputs.elite = '';\r\n            inputs.typeError = '';\r\n            inputs.roomError = '';\r\n            inputs.nameError = '';\r\n            inputs.ticketError = '';\r\n            this.setState({ frontInputs: inputs });\r\n            document.getElementById('frontForm').reset();\r\n        }\r\n    }\n\n    typeSelectHandler = (type) => {\r\n        let frontInputs = this.state.frontInputs;\r\n        frontInputs.type = type;\r\n        this.setState({ frontInputs: frontInputs });\r\n    }\n\n    frontClickHandler = (index) => {\n        let fronts = [...this.state.fronts];\r\n        let activeFront = fronts[index];\r\n\r\n        let bellmen = [...this.state.bellmen];\r\n        bellmen.forEach((bellman) => {\r\n            bellman.active = 'false';\r\n        })\r\n        this.setState({ bellmen: bellmen, activeFront: activeFront, activeIndex: '', activeStatus: '' });\r\n    }\n\n    assignHandler = (action) => {\n        let activeFront = this.state.activeFront;\r\n        if (this.validate(activeFront)) {\r\n            document.getElementById('editBtn').click();\r\n            return;\r\n        }\r\n        let fronts = this.state.fronts;\n        let bellmen = this.state.bellmen;\n        let bellman = bellmen[this.state.activeIndex];\r\n\r\n        let frontIndex = fronts.indexOf(activeFront);\n        let bellmanIndex = bellmen.indexOf(activeFront.bellman);\n\n        if (this.state.activeIndex !== '' && action==='assign') {\r\n            fronts.splice(frontIndex, 1);\r\n            activeFront.status = 'Assigned';\r\n            activeFront.bellman = bellman;\r\n            fronts.push(activeFront);\r\n            bellmen[this.state.activeIndex].fronts++;\r\n            bellmen[this.state.activeIndex].status = 'Busy';\r\n            bellmen.forEach(bellman => {\r\n                bellman.active = \"false\";\r\n            })\r\n            this.setState({ activeFront: activeFront, fronts: fronts, bellmen: bellmen, activeStatus: '' });\r\n        }\r\n        else if (action === 'pending') {\r\n            fronts.splice(frontIndex, 1);\r\n            activeFront.status = 'Pending';\r\n            activeFront.bellman = '';\r\n            fronts.push(activeFront);\r\n            bellmen[bellmanIndex].fronts--;\r\n            if (bellmen[bellmanIndex].fronts === 0) {\r\n                bellmen[bellmanIndex].status = 'Available';\r\n            }\r\n            this.setState({ activeFront: activeFront, fronts: fronts, bellmen: bellmen });\r\n        }\r\n        else {\r\n            alert(\"Select a bellman to assign\");\r\n        }\r\n    }\n\n    completeFrontHandler = () => {\n        const activeFront = this.state.activeFront;\r\n        let fronts = this.state.fronts;\r\n        let index = fronts.indexOf(activeFront);\r\n        let completedFronts = this.state.completedFronts;\r\n        fronts.splice(index, 1);\r\n\r\n        if (activeFront.status === 'Assigned') {\r\n            let bellmen = this.state.bellmen;\r\n            let bellmanIndex = bellmen.indexOf(activeFront.bellman);\r\n            let bellman = bellmen[bellmanIndex];\r\n            bellman.fronts--;\r\n\r\n            if (bellman.status === 'Busy' && bellman.fronts === 0) {\r\n                bellman.status = 'Available';\r\n            }\r\n            bellmen[bellmanIndex] = bellman;\r\n            activeFront.timeCompleted = new Date();\r\n            activeFront.timeElapsed = Math.floor((activeFront.timeCompleted.getTime() - activeFront.time.getTime()) / 1000 / 60);\r\n            activeFront.bellman = activeFront.bellman.fullName;\r\n            completedFronts.push(activeFront);\r\n            this.setState({ bellmen: bellmen, completedFronts: completedFronts });\r\n        }\r\n        \r\n        this.setState({ fronts: fronts });\r\n    }\n\n    sortBy = (property) => {\n        let order = 1;\r\n        let completedSort = this.state.completedSort;\r\n        if (property === completedSort) {\r\n            order = -1;\r\n            completedSort = '';\r\n        } else {\r\n            completedSort = property;\r\n        }\r\n        this.setState({ completedSort: completedSort });\r\n        return function (a, b) {\r\n            const result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n            return result * order;\r\n        }\r\n    }\n\n    sortCompletedHandler = (property) => {\n        let fronts = this.state.completedFronts;\n        fronts.sort(this.sortBy(property));\r\n        this.setState({ completedFronts: fronts });\r\n    }\n\n\n\n    render() {\n\n\n\n\n        return (\n            <div className=\"App\">\n                <Nav click={this.navClickHandler} />\n                <Fronts\n                    class={this.state.frontsClass}\n                    currentTime={this.state.currentTime}\n                    activeFront={this.state.activeFront}\n                    tableClass={this.showTable}\n                    fronts={this.state.fronts}\n                    bellmen={this.state.bellmen}\n                    validators={this.state.validators}\n                    frontInputs={this.state.frontInputs}\n                    click={this.addFrontHandler}\n                    frontClick={this.frontClickHandler}\n                    typeSelect={this.typeSelectHandler}\n                    frontInputsHandler={this.frontInputsHandler}\n                    bellmanClick={this.employeeClickHandler}\n                    assignFront={this.assignHandler}\n                    confirmCancel={this.completeFrontHandler}\n                    editInputs={this.editInputsHandler}\n                    editType={this.editTypeHandler}\n                />\n                <TimeClock class={this.state.timeClockClass} click={this.clockInHandler} />\n                <StaffTable\n                    className={this.showTable(this.state.bellmen)}\n                    bellmen={this.state.bellmen}\n                    click={this.employeeClickHandler}\n                    status={this.state.activeStatus}\n                    staffButtonClick={this.statusHandler}\n                />\n                <CompletedFronts class={this.state.completedClass} fronts={this.state.completedFronts} sort={this.sortCompletedHandler} />\n            </div>\n        );\r\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}